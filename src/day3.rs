use std::collections::HashSet;

pub fn day3a(path1: &[(Direction, i64)], path2: &[(Direction, i64)], a: bool) -> i64 {
    use Direction::*;
    let to_points = |path: &[(Direction, i64)]| -> Vec<(i64, i64)> {
        let mut points = Vec::new();
        let mut point = (0, 0);
        for mov in path {
            for _ in 0..mov.1 {
                match mov.0 {
                    U => point.1 += 1,
                    D => point.1 -= 1,
                    L => point.0 -= 1,
                    R => point.0 += 1,
                }
                points.push(point.clone());
            }
        }
        points
    };

    let path1_points = to_points(path1);
    let path1_set: HashSet<_> = path1_points.iter().cloned().collect();
    let path2_points = to_points(path2);
    let path2_set: HashSet<_> = path2_points.iter().cloned().collect();
    let intersections = path1_set.intersection(&path2_set);
    intersections
        .map(|&(x, y)| {
            if a {
                x.abs() + y.abs()
            } else {
                path1_points.iter().position(|&p| p == (x, y)).unwrap() as i64
                    + path2_points.iter().position(|&p| p == (x, y)).unwrap() as i64
                    + 2
            }
        })
        .min()
        .unwrap()
}

#[derive(Debug, Hash, Eq, PartialEq, Clone)]
pub enum Direction {
    U,
    D,
    L,
    R,
}

#[cfg(test)]
mod tests {
    #[test]
    fn day3a() {
        {
            let path1 = &[(R, 8), (U, 5), (L, 5), (D, 3)];
            let path2 = &[(U, 7), (R, 6), (D, 4), (L, 4)];

            assert_eq!(super::day3a(path1, path2, true), 6);
            assert_eq!(super::day3a(path1, path2, false), 30);
        }
        {
            let path1 = &[
                (R, 75),
                (D, 30),
                (R, 83),
                (U, 83),
                (L, 12),
                (D, 49),
                (R, 71),
                (U, 7),
                (L, 72),
            ];
            let path2 = &[
                (U, 62),
                (R, 66),
                (U, 55),
                (R, 34),
                (D, 71),
                (R, 55),
                (D, 58),
                (R, 83),
            ];

            assert_eq!(super::day3a(path1, path2, true), 159);
            assert_eq!(super::day3a(path1, path2, false), 610);
        }

        assert_eq!(super::day3a(DAY3_INPUT1, DAY3_INPUT2, true), 316);
        assert_eq!(super::day3a(DAY3_INPUT1, DAY3_INPUT2, false), 16368);
    }

    use super::Direction::*;
    const DAY3_INPUT1: &[(super::Direction, i64)] = &[
        (R, 990),
        (U, 796),
        (R, 784),
        (U, 604),
        (R, 6),
        (U, 437),
        (L, 96),
        (U, 285),
        (L, 361),
        (U, 285),
        (L, 339),
        (D, 512),
        (L, 389),
        (D, 840),
        (L, 425),
        (U, 444),
        (L, 485),
        (D, 528),
        (L, 262),
        (U, 178),
        (L, 80),
        (U, 2),
        (R, 952),
        (U, 459),
        (L, 361),
        (D, 985),
        (R, 56),
        (U, 135),
        (R, 953),
        (D, 913),
        (L, 361),
        (U, 120),
        (L, 329),
        (U, 965),
        (L, 294),
        (U, 890),
        (L, 126),
        (U, 214),
        (R, 232),
        (D, 444),
        (L, 714),
        (U, 791),
        (R, 888),
        (U, 923),
        (R, 378),
        (U, 233),
        (L, 654),
        (D, 703),
        (R, 902),
        (D, 715),
        (R, 469),
        (D, 60),
        (R, 990),
        (U, 238),
        (R, 755),
        (U, 413),
        (L, 409),
        (D, 601),
        (R, 452),
        (U, 504),
        (R, 472),
        (D, 874),
        (L, 766),
        (D, 594),
        (R, 696),
        (U, 398),
        (R, 593),
        (D, 889),
        (R, 609),
        (D, 405),
        (L, 962),
        (U, 176),
        (L, 237),
        (U, 642),
        (L, 393),
        (D, 91),
        (L, 463),
        (U, 936),
        (R, 199),
        (D, 136),
        (R, 601),
        (D, 8),
        (R, 359),
        (D, 863),
        (L, 410),
        (U, 598),
        (L, 444),
        (D, 34),
        (R, 664),
        (D, 323),
        (R, 72),
        (D, 98),
        (L, 565),
        (D, 476),
        (L, 197),
        (D, 132),
        (R, 510),
        (U, 665),
        (R, 936),
        (U, 3),
        (R, 385),
        (U, 144),
        (L, 284),
        (D, 713),
        (L, 605),
        (U, 106),
        (R, 543),
        (D, 112),
        (R, 528),
        (D, 117),
        (R, 762),
        (U, 330),
        (R, 722),
        (U, 459),
        (L, 229),
        (U, 375),
        (L, 870),
        (D, 81),
        (R, 623),
        (U, 95),
        (L, 148),
        (D, 530),
        (L, 622),
        (D, 62),
        (R, 644),
        (D, 365),
        (L, 214),
        (U, 847),
        (R, 31),
        (D, 832),
        (L, 648),
        (D, 293),
        (R, 79),
        (D, 748),
        (L, 270),
        (U, 159),
        (L, 8),
        (U, 83),
        (R, 195),
        (U, 912),
        (L, 409),
        (D, 649),
        (L, 750),
        (D, 286),
        (L, 623),
        (D, 956),
        (R, 81),
        (U, 775),
        (R, 44),
        (D, 437),
        (L, 199),
        (U, 698),
        (L, 42),
        (U, 419),
        (L, 883),
        (U, 636),
        (L, 323),
        (U, 89),
        (L, 246),
        (D, 269),
        (L, 992),
        (U, 739),
        (R, 62),
        (U, 47),
        (R, 63),
        (U, 17),
        (L, 234),
        (U, 135),
        (R, 126),
        (D, 208),
        (L, 69),
        (U, 550),
        (L, 123),
        (D, 66),
        (R, 463),
        (U, 992),
        (R, 411),
        (D, 276),
        (L, 851),
        (U, 520),
        (R, 805),
        (D, 300),
        (L, 894),
        (U, 171),
        (L, 922),
        (D, 901),
        (R, 637),
        (U, 907),
        (R, 328),
        (U, 433),
        (L, 316),
        (D, 644),
        (L, 398),
        (U, 10),
        (L, 648),
        (D, 190),
        (R, 884),
        (U, 474),
        (R, 397),
        (D, 718),
        (L, 925),
        (D, 578),
        (R, 249),
        (U, 959),
        (L, 697),
        (D, 836),
        (R, 231),
        (U, 806),
        (R, 982),
        (U, 827),
        (R, 579),
        (U, 830),
        (L, 135),
        (D, 666),
        (R, 818),
        (D, 502),
        (L, 898),
        (D, 585),
        (R, 91),
        (D, 190),
        (L, 255),
        (U, 535),
        (R, 56),
        (U, 390),
        (R, 619),
        (D, 815),
        (L, 300),
        (D, 81),
        (R, 432),
        (D, 70),
        (L, 940),
        (D, 587),
        (L, 259),
        (D, 196),
        (R, 241),
        (U, 4),
        (R, 440),
        (U, 678),
        (R, 185),
        (U, 451),
        (R, 733),
        (D, 984),
        (R, 464),
        (D, 298),
        (L, 738),
        (U, 600),
        (R, 353),
        (D, 44),
        (L, 458),
        (U, 559),
        (L, 726),
        (D, 786),
        (L, 307),
        (D, 333),
        (L, 226),
        (D, 463),
        (R, 138),
        (D, 142),
        (L, 521),
        (D, 201),
        (R, 51),
        (D, 202),
        (L, 204),
        (U, 130),
        (L, 333),
        (U, 597),
        (R, 298),
        (U, 42),
        (L, 951),
        (U, 66),
        (R, 312),
        (U, 707),
        (L, 555),
        (D, 225),
        (L, 360),
        (D, 12),
        (L, 956),
        (D, 361),
        (L, 989),
        (D, 625),
        (L, 944),
        (D, 398),
        (L, 171),
        (D, 982),
        (L, 377),
        (U, 114),
        (L, 339),
        (U, 164),
        (R, 39),
        (D, 793),
        (R, 992),
        (U, 834),
        (R, 675),
        (U, 958),
        (R, 334),
        (D, 697),
        (L, 734),
        (D, 40),
        (L, 149),
        (U, 394),
        (R, 976),
    ];
    const DAY3_INPUT2: &[(super::Direction, i64)] = &[
        (L, 1005),
        (D, 52),
        (L, 125),
        (U, 787),
        (L, 761),
        (U, 262),
        (L, 466),
        (D, 966),
        (R, 895),
        (U, 789),
        (R, 6),
        (U, 2),
        (R, 870),
        (U, 971),
        (R, 238),
        (D, 946),
        (L, 752),
        (D, 240),
        (R, 721),
        (U, 349),
        (L, 679),
        (D, 518),
        (L, 104),
        (U, 417),
        (L, 462),
        (U, 544),
        (L, 519),
        (U, 797),
        (R, 873),
        (U, 70),
        (R, 298),
        (U, 45),
        (L, 779),
        (D, 921),
        (R, 468),
        (D, 421),
        (R, 803),
        (U, 108),
        (L, 812),
        (D, 498),
        (R, 226),
        (D, 309),
        (R, 766),
        (U, 724),
        (L, 961),
        (U, 472),
        (R, 940),
        (U, 944),
        (R, 418),
        (D, 682),
        (R, 328),
        (U, 55),
        (R, 737),
        (U, 961),
        (L, 343),
        (U, 397),
        (R, 112),
        (D, 292),
        (L, 155),
        (U, 162),
        (R, 398),
        (U, 445),
        (L, 524),
        (U, 256),
        (R, 323),
        (D, 587),
        (L, 862),
        (D, 726),
        (R, 624),
        (D, 230),
        (R, 460),
        (U, 539),
        (R, 723),
        (U, 93),
        (L, 507),
        (U, 608),
        (L, 150),
        (U, 159),
        (R, 35),
        (U, 458),
        (R, 208),
        (U, 546),
        (L, 495),
        (D, 835),
        (L, 636),
        (U, 960),
        (L, 322),
        (U, 408),
        (L, 78),
        (D, 250),
        (L, 994),
        (U, 818),
        (R, 107),
        (U, 978),
        (R, 401),
        (D, 147),
        (R, 574),
        (D, 549),
        (R, 983),
        (U, 698),
        (L, 99),
        (D, 63),
        (L, 772),
        (U, 409),
        (R, 975),
        (U, 990),
        (L, 893),
        (U, 467),
        (L, 860),
        (D, 721),
        (R, 504),
        (U, 102),
        (R, 678),
        (D, 672),
        (L, 406),
        (D, 933),
        (R, 743),
        (D, 788),
        (R, 142),
        (D, 44),
        (R, 208),
        (D, 424),
        (R, 28),
        (D, 674),
        (R, 331),
        (D, 968),
        (L, 154),
        (U, 206),
        (R, 222),
        (D, 354),
        (R, 687),
        (D, 331),
        (L, 539),
        (D, 390),
        (L, 373),
        (D, 514),
        (L, 622),
        (U, 673),
        (R, 345),
        (U, 943),
        (L, 508),
        (D, 337),
        (R, 265),
        (D, 785),
        (L, 189),
        (U, 429),
        (R, 344),
        (D, 719),
        (R, 622),
        (U, 199),
        (L, 765),
        (U, 350),
        (R, 833),
        (U, 309),
        (R, 95),
        (U, 911),
        (R, 548),
        (U, 746),
        (R, 107),
        (D, 867),
        (L, 648),
        (D, 680),
        (R, 28),
        (U, 596),
        (L, 891),
        (U, 168),
        (R, 933),
        (U, 571),
        (R, 365),
        (U, 267),
        (R, 916),
        (D, 130),
        (L, 149),
        (D, 898),
        (L, 513),
        (D, 167),
        (R, 587),
        (U, 799),
        (R, 134),
        (D, 328),
        (R, 562),
        (D, 929),
        (L, 399),
        (U, 568),
        (R, 565),
        (U, 241),
        (L, 395),
        (U, 822),
        (L, 624),
        (D, 145),
        (L, 995),
        (U, 516),
        (R, 474),
        (D, 609),
        (R, 153),
        (U, 52),
        (R, 561),
        (D, 15),
        (R, 283),
        (U, 321),
        (L, 850),
        (U, 218),
        (L, 225),
        (D, 635),
        (L, 630),
        (U, 102),
        (L, 84),
        (D, 672),
        (L, 128),
        (D, 885),
        (L, 506),
        (U, 911),
        (R, 355),
        (D, 132),
        (R, 155),
        (D, 120),
        (L, 110),
        (U, 368),
        (R, 149),
        (D, 343),
        (L, 708),
        (U, 378),
        (R, 591),
        (D, 585),
        (L, 381),
        (D, 517),
        (R, 852),
        (U, 432),
        (R, 342),
        (U, 273),
        (R, 893),
        (D, 277),
        (L, 548),
        (U, 859),
        (L, 891),
        (U, 311),
        (L, 901),
        (U, 255),
        (R, 421),
        (U, 90),
        (L, 72),
        (D, 474),
        (L, 654),
        (U, 12),
        (L, 146),
        (D, 867),
        (L, 485),
        (D, 663),
        (R, 123),
        (D, 82),
        (L, 21),
        (U, 408),
        (L, 38),
        (D, 864),
        (L, 114),
        (D, 645),
        (R, 936),
        (U, 765),
        (L, 832),
        (D, 668),
        (L, 482),
        (U, 79),
        (L, 594),
        (U, 276),
        (L, 559),
        (D, 469),
        (R, 314),
        (D, 162),
        (R, 621),
        (U, 230),
        (L, 688),
        (U, 82),
        (R, 605),
        (U, 191),
        (L, 381),
        (D, 327),
        (L, 91),
        (D, 217),
        (R, 714),
        (D, 942),
        (R, 851),
        (U, 358),
        (R, 22),
        (U, 952),
        (R, 279),
        (D, 897),
        (R, 485),
        (D, 867),
        (L, 940),
        (U, 891),
        (L, 223),
        (D, 264),
        (L, 634),
        (D, 560),
        (R, 645),
        (D, 705),
        (L, 289),
        (U, 584),
        (R, 97),
        (U, 920),
        (R, 41),
    ];
}
